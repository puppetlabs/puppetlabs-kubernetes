apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
    - --allow-privileged=true
    <%- if @kubernetes_version =~ /1[.](8|9)[.]\d/ -%>
    - --enable-bootstrap-token-auth=true
    <%- end -%>
    <%- if @kubernetes_version =~ /1[.](6|7)[.]\d/ -%>
    - --experimental-bootstrap-token-auth=true
    <%- end -%>
    <%- if (@cluster_service_cidr and not @cluster_service_cidr.empty?) -%>
    - --service-cluster-ip-range=<%= @cluster_service_cidr %>
    <%- end -%>
    - --insecure-port=0
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --client-ca-file=/etc/kubernetes/pki/ca.crt
    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
    - --secure-port=6443
    - --storage-backend=etcd3
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
    - --service-account-key-file=/etc/kubernetes/pki/sa.pub
    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds
    - --requestheader-username-headers=X-Remote-User
    - --requestheader-allowed-names=front-proxy-client
    <%- if @kubernetes_version =~ /1[.](8|9)[.]\d/ -%>
    - --authorization-mode=Node,RBAC
    <%- end -%>
    <%- if @kubernetes_version =~ /1[.](6|7)[.]\d/ -%>
    - --authorization-mode=RBAC
    <%- end -%>
    - --advertise-address=<%= @kube_api_advertise_address  %>
    - --etcd-servers=http://127.0.0.1:2379
<% @apiserver_extra_arguments.each do |arg| -%>
    - <%= arg %>
<% end -%>
    image: gcr.io/google_containers/kube-apiserver-amd64:v<%= @kubernetes_version  %>
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: kube-apiserver
    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - mountPath: /etc/kubernetes/
      name: k8s
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: certs
<% @apiserver_extra_volumes.each do |vol| -%>
    - mountPath: <%= vol['mountPath'] %>
      name: <%= vol['name'] %>
      <%- if vol['readOnly'] -%>
      readOnly: true
      <%- end -%>
<% end -%>
  hostNetwork: true
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: k8s
  - hostPath:
      path: /etc/ssl/certs
    name: certs
<% @apiserver_extra_volumes.each do |vol| -%>
  - hostPath:
      path: <%= vol['hostPath'] %>
    name: <%= vol['name'] %>
<% end -%>
status: {}
