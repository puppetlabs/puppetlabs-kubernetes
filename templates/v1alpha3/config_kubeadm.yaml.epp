apiVersion: kubeadm.k8s.io/v1alpha3
apiEndpoint:
  advertiseAddress: <%= $kube_api_advertise_address %>
  bindPort: <%= $kube_api_bind_port %>
bootstrapTokens:
  - token: "<%= $token %>"
    description: "kubeadm bootstrap token"
    ttl: "<%= $ttl_duration %>"
    usages:
    - signing
    - authentication
    groups:
    - system:bootstrappers:kubeadm:default-node-token
kind: InitConfiguration
nodeRegistration:
  name: <%= $node_name %>
  <%- if $container_runtime == "cri_containerd" { -%>
  criSocket: unix:///run/containerd/containerd.sock
  <%- } -%>
  kubeletExtraArgs:
    cgroup-driver: <%= $cgroup_driver %>
    <%- if $cloud_provider { -%>
    cloud-provider: <%= $cloud_provider %>
    <%- } -%>
    <%- if $cloud_config { -%>
    cloud-config: <%= $cloud_config %>
    <%- } -%>
    <%- $kubelet_extra_arguments.each |$arg| { -%>
    <%= $arg %>
    <%- } -%>
---
apiVersion: kubeadm.k8s.io/v1alpha3
CertificatesDir: /etc/kubernetes/pki
etcd:
    external:
        endpoints:
    <% $etcd_peers.each |$peer| { -%>
    - https://<%= $peer %>:2379
    <% } -%>

        caFile: /etc/kubernetes/pki/etcd/ca.crt
        certFile: /etc/kubernetes/pki/etcd/client.crt
        keyFile: /etc/kubernetes/pki/etcd/client.key
imageRepository: <%= $image_repository %>
kind: ClusterConfiguration
kubernetesVersion: v<%= $kubernetes_version %>

<%- if $kubernetes_cluster_name != "kubernetes" { -%>
clusterName: <%= $kubernetes_cluster_name %>
<%- } -%>

networking:
  podSubnet: <%= $cni_pod_cidr %>
  serviceSubnet: <%= $service_cidr %>
<%- if $apiserver_merged_extra_arguments { -%>
apiServerExtraArgs:
  <%- $apiserver_merged_extra_arguments.each |$arg| { -%>
  <%= $arg %>
  <%- } -%>
<%- } -%>
<%- if $apiserver_merged_extra_volumes { -%>
apiServerExtraVolumes:
  <%- $apiserver_merged_extra_volumes.each |$name, $config| { -%>
  - name: <%= $name %>
    hostPath: <%= $config['hostPath'] %>
    mountPath: <%= $config['mountPath'] %>
  <%- } -%>
<%- } -%>
<%- if $controllermanager_merged_extra_arguments { -%>
controllerManagerExtraArgs:
  <%- $controllermanager_merged_extra_arguments.each |$arg| { -%>
  <%= $arg %>
  <%- } -%>
<%- } -%>
<%- if $controllermanager_merged_extra_volumes { -%>
controllerManagerExtraVolumes:
  <%- $controllermanager_merged_extra_volumes.each |$name, $config| { -%>
  - name: <%= $name %>
    hostPath: <%= $config['hostPath'] %>
    mountPath: <%= $config['mountPath'] %>
  <%- } -%>
<%- } -%>
<% if $apiserver_cert_extra_sans { -%>
apiServerCertSANs:
<% $apiserver_cert_extra_sans.each |$san| { -%>
- <%= $san %>
<% } -%>
<% } -%>
<%- if $kubeadm_extra_config { -%>
<%= $kubeadm_extra_config_yaml %>
<%- } -%>
---
apiVersion: kubeadm.k8s.io/v1alpha3
kind: JoinConfiguration
<%- if $kubernetes_cluster_name != "kubernetes" { -%>
clusterName: <%= $kubernetes_cluster_name %>
<%- } -%>

nodeRegistration:
  name: <%= $node_name %>
  <%- if $container_runtime == "cri_containerd" { -%>
  criSocket: unix:///run/containerd/containerd.sock
  <%- } -%>
  kubeletExtraArgs:
    cgroup-driver: <%= $cgroup_driver %>
    <%- if $cloud_provider { -%>
    cloud-provider: <%= $cloud_provider %>
    <%- } -%>
    <%- if $cloud_config { -%>
    cloud-config: <%= $cloud_config %>
    <%- } -%>
    <%- $kubelet_extra_arguments.each |$arg| { -%>
    <%= $arg %>
    <%- } -%>
token: <%= $token %>
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
<%- if $kubelet_extra_config { -%>
<%= $kubelet_extra_config_yaml %>
<%- } -%>